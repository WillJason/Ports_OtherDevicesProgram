C51 COMPILER V9.00   PITURECHINA                                                           01/18/2015 18:26:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PITURECHINA
OBJECT MODULE PLACED IN piturechina.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE piturechina.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define  uint   unsigned int
   4          #define  uchar  unsigned char
   5          sbit rs=P3^5;                          //1为数据选择，0为指令选择
   6          sbit rw=P3^6;                          //控制读与写
   7          sbit lcden=P3^4;                       //使能端
   8          sbit PSB=P3^2;                         //串并接口方式选择 ，1为并方式，0为串方式
   9          sbit CS1=P3^3;                         //空脚,接1或0都行
  10          sbit RST=P3^7;                         //复位脚，低电平有效
  11          uchar table[]={"国足加油"};
  12          uchar i;
  13          uchar code  image[]={ 
  14                 
  15          
  16          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  17          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  18          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  19          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  20          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  21          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  22          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  23          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  24          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  25          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  26          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  27          0x00,0x00,0xFF,0x80,0x0F,0xFF,0x80,0x3F,0xFF,0xF1,0x98,0x00,0xDC,0x00,0x00,0x00,
  28          0x00,0x07,0xFC,0x00,0x1F,0x80,0x00,0x00,0x00,0x01,0x98,0x01,0xD8,0x1F,0xFE,0x00,
  29          0x00,0x1F,0x00,0x00,0x3E,0x00,0x00,0x3F,0xFF,0xF1,0x8C,0x03,0x98,0x3F,0xFF,0x80,
  30          0x00,0x34,0x1F,0x80,0x70,0x3F,0x80,0x00,0x30,0x01,0xCC,0x03,0x38,0x7F,0xFF,0xC0,
  31          0x00,0x38,0xFF,0x80,0xE1,0xFF,0x80,0x00,0x30,0x00,0xC6,0x06,0x30,0xFF,0xFF,0xE0,
  32          0x00,0x31,0xE0,0x00,0xE3,0x80,0x00,0x00,0x30,0x00,0xC6,0x06,0x31,0xF0,0x03,0xE0,
  33          0x00,0x73,0xC0,0x00,0xC3,0x00,0x00,0x00,0x30,0x00,0x63,0x0C,0x61,0xF0,0x03,0xF0,
  34          0x00,0xF3,0x00,0x00,0xC6,0x00,0x00,0x00,0x30,0x00,0x63,0x0C,0xE3,0xF3,0xFF,0xF0,
  35          0x00,0x67,0x00,0x00,0xC6,0x00,0x00,0x00,0x30,0x00,0x73,0x1C,0xC7,0xF3,0xFF,0xF8,
  36          0x00,0xE5,0x00,0x00,0xC4,0x00,0x00,0x00,0x30,0x00,0x31,0x99,0xC7,0xF3,0xFF,0xF8,
  37          0x00,0xE7,0x00,0x00,0xC4,0x00,0x00,0x00,0x30,0x00,0x39,0xB9,0x87,0xF3,0xFF,0xF8,
  38          0x00,0xE7,0x00,0x00,0xC4,0x00,0x00,0x00,0x30,0x00,0x1C,0xF3,0x07,0xF3,0xFF,0xFC,
  39          0x00,0xE3,0x00,0x00,0xC6,0x00,0x00,0x00,0x30,0x00,0x1C,0x63,0x07,0xF0,0x0F,0xFC,
  40          0x00,0xE3,0x80,0x00,0xC6,0x00,0x00,0x00,0x30,0x00,0x0E,0x66,0x07,0xF0,0x07,0xFC,
  41          0x00,0x71,0x80,0x00,0xC7,0x00,0x00,0x00,0x30,0x00,0x0E,0x6E,0x0F,0xFF,0xE3,0xFC,
  42          0x00,0xF1,0xE0,0x00,0xE3,0x80,0x00,0x00,0x30,0x00,0x07,0x0C,0x0F,0xFF,0xF3,0xFC,
  43          0x00,0x78,0xFF,0x80,0xE1,0xFF,0x80,0x00,0x30,0x00,0x07,0x98,0x0F,0xFF,0xF3,0xFC,
  44          0x00,0x3C,0x7F,0x80,0x70,0xFF,0x80,0x00,0x30,0x00,0x03,0x98,0x1F,0xFF,0xF3,0xFC,
  45          0x00,0x1E,0x00,0x00,0x3C,0x00,0x00,0x00,0x30,0x00,0x01,0xF0,0x1F,0xFF,0xF3,0xFC,
  46          0x00,0x1F,0xC0,0x00,0x0F,0x00,0x00,0x00,0x30,0x00,0x01,0xF0,0x3F,0xFF,0xE3,0xF8,
  47          0x00,0x0F,0xFF,0x80,0x03,0xFF,0x80,0x00,0x30,0x00,0x00,0xE0,0x7F,0xF0,0x07,0xF8,
  48          0x00,0x07,0xFF,0x80,0x01,0xFF,0x80,0x00,0x30,0x00,0x00,0x40,0xFF,0xF0,0x0F,0xF0,
  49          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xF0,
  50          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xE0,
  51          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xE0,
  52          0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,
  53          0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,
  54          0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,
  55          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   PITURECHINA                                                           01/18/2015 18:26:34 PAGE 2   

  56          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  57          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  58          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  59          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  60          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  61          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  62          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  64          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  66          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  67          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  68          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  69          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  71          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  72          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  73          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  74          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  75          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  76          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  79          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
  80          void delay(uint z)                         //延时公式Z ms 
  81          { uint x,y;
  82   1         for(x=z;x>0;x--)
  83   1           for(y=110;y>0;y--);
  84   1      }
  85          void delay_us(uchar t)                  //延时公式大约50t us
  86          { uchar i,j;
  87   1           for(i=t;i>0;i--)
  88   1              for(j=5;j>0;j--);
  89   1      }
  90          
  91          void  read_lcdbf()
  92          { uchar temp;
  93   1              P0=0xff;
  94   1           do
  95   1                  {   lcden=0;
  96   2                          rs=0;
  97   2                      rw=1;
  98   2                          _nop_();
  99   2                          lcden=1;
 100   2                              _nop_();
 101   2                              temp=P0;           //读数据须在下降沿读出，读时，要在使能端为高电平时间
 102   2                              lcden=0;
 103   2                      }
 104   1                      while(temp&0x80);
 105   1      }
 106          void write_com(uchar com)                       //写指令
 107          {  
 108   1        rs=0;
 109   1        rw=0;
 110   1        lcden=0;
 111   1        P0=com;
 112   1        lcden=1;
 113   1        delay_us(1);
 114   1        lcden=0;
 115   1        read_lcdbf();
 116   1      }
 117          void write_date(uchar date)            //写数据，都是并口的
C51 COMPILER V9.00   PITURECHINA                                                           01/18/2015 18:26:34 PAGE 3   

 118           {       
 119   1         rs=1;
 120   1         rw=0;
 121   1         lcden=0;
 122   1         P0=date;
 123   1         lcden=1;
 124   1         lcden=0; 
 125   1         read_lcdbf();
 126   1      }
 127          void init()                                      //八位软件初始化
 128          {  delay(100);
 129   1         RST=1;
 130   1         CS1=1; 
 131   1         PSB=1;                                        //选择并行接口
 132   1         write_com(0x30);                      //基本指令操作
 133   1         delay_us(4);
 134   1         write_com(0x0c);                          //只开显示
 135   1         delay_us(4);
 136   1         write_com(0x01);                          //清屏指令
 137   1         delay(15); 
 138   1         write_com(0x06);                              //游标每写完一个字指针就加一
 139   1         delay(5); 
 140   1         write_com(0x80);     
 141   1       }
 142           /*防止花屏，在画点前应该先清除GDRAM显示，记住水平方向是以字节为单位的，
 143          垂直方向以位为单位，所以一行行清除时，会出错
 144          */
 145          void  clear_GDRAM()                       
 146          { uchar i,j,lcd_x=0x80,lcd_y=0x80,k;
 147   1              write_com(0x34);                                    //因启用了GDRAM，所以需开扩展指令
 148   1          for(i=0;i<2;i++)
 149   1           {    for(j=0;j<32;j++)                                     //因垂直坐标有32位
 150   2                        {        write_com(lcd_y+j);          //一行行的清除
 151   3                                     write_com(lcd_x);                //因
 152   3                                         for(k=0;k<16;k++)             //水平有16个字节
 153   3                                            {  write_date(0x00);       //依次清除它们 ，水平方向地址会自动加一
 154   4                                                   delay_us(1);
 155   4                                                }
 156   3                                }
 157   2                       lcd_x=0x88;
 158   2               }
 159   1              write_com(0x36);
 160   1                  write_com(0x30); 
 161   1      }
 162          void write_image(uchar *p)
 163          {  uchar        i,j,lcd_x=0x80,lcd_y=0x80,k;
 164   1              write_com(0x34);                                    //因启用了GDRAM，所以需开扩展指令
 165   1          for(i=0;i<2;i++)
 166   1           {    for(j=0;j<32;j++)                                     //因垂直坐标有32位
 167   2                        {        write_com(lcd_y+j);          //一行行的清除
 168   3                                     write_com(lcd_x);                //因
 169   3                                         for(k=0;k<16;k++)             //水平有16个字节
 170   3                                            {  write_date(*p++);       //依次清除它们 ，水平方向地址会自动加一
 171   4                                                   delay_us(1);
 172   4                                                }
 173   3                                }
 174   2                       lcd_x=0x88;
 175   2               }
 176   1              write_com(0x36);
 177   1                  write_com(0x30); 
 178   1      }
 179          void  lcd_pos(uchar x,uchar y)    //设定显示位置，在第x行，且在x行的第y个字符显示
C51 COMPILER V9.00   PITURECHINA                                                           01/18/2015 18:26:34 PAGE 4   

 180          {  uchar pos;
 181   1          switch (x)
 182   1                 { case 1:  x=0x80; break;
 183   2                   case 2:  x=0x90; break;
 184   2                       case 3:  x=0x88; break;
 185   2                       case 4:  x=0x98; break;
 186   2                 }
 187   1                 pos=x+y ;
 188   1                write_com(pos);
 189   1      }
 190          void main()
 191          {   init();
 192   1          clear_GDRAM();
 193   1          write_image(image);
 194   1              lcd_pos(4,0);
 195   1              for(i=0;i<8;i++)
 196   1                        write_date(table[i]);
 197   1           while(1);
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    390    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
